#!/usr/bin/env python3
"""
Script para inicializar la base de datos vectorial con documentos de ejemplo.
Este script carga los documentos de muestra y los a√±ade a ChromaDB.
"""

import os
import sys
import asyncio
from pathlib import Path

# A√±adir el directorio ra√≠z al path
sys.path.append(str(Path(__file__).parent.parent))

from app.models import DocumentoBase, CategoriaPQRS
from app.services.vector_store import vector_store
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def load_sample_documents():
    """Carga documentos de ejemplo"""
    
    sample_docs = [
        {
            "file": "data/sample_documents/manual_infraestructura.txt",
            "titulo": "Manual de Procedimientos - Infraestructura",
            "categoria": CategoriaPQRS.MANTENIMIENTO_GENERAL,
            "metadatos": {
                "tipo": "manual",
                "fuente": "Secretar√≠a de Infraestructura",
                "version": "2024.1"
            }
        },
        {
            "file": "data/sample_documents/faq_ciudadano.txt", 
            "titulo": "Preguntas Frecuentes - Ciudadanos",
            "categoria": CategoriaPQRS.MANTENIMIENTO_GENERAL,
            "metadatos": {
                "tipo": "faq",
                "fuente": "Atenci√≥n al Ciudadano",
                "version": "2024.1"
            }
        }
    ]
    
    # Documentos espec√≠ficos por categor√≠a
    specific_docs = [
        {
            "titulo": "Gu√≠a de Reporte de Huecos",
            "contenido": """
GU√çA R√ÅPIDA: C√ìMO REPORTAR HUECOS EN V√çAS

1. CANALES DE REPORTE:
   - L√≠nea 123 (emergencias)
   - App Medell√≠nMe Cuida
   - Portal web www.medellin.gov.co
   - PQRS presencial

2. INFORMACI√ìN NECESARIA:
   - Ubicaci√≥n exacta (direcci√≥n, barrio)
   - Tama√±o aproximado del hueco
   - Nivel de peligrosidad
   - Foto si es posible

3. TIEMPOS DE RESPUESTA:
   - V√≠as principales: 72 horas
   - V√≠as secundarias: 7 d√≠as
   - Emergencias: 24 horas

4. SEGUIMIENTO:
   - Conserve el n√∫mero de radicaci√≥n
   - Consulte estado en l√≠nea
   - Llame si excede los tiempos

IMPORTANTE: Los huecos grandes en v√≠as principales se consideran emergencias y deben reportarse inmediatamente al 123.
            """,
            "categoria": CategoriaPQRS.VIAS_PAVIMENTOS,
            "metadatos": {"tipo": "guia", "prioridad": "alta"}
        },
        {
            "titulo": "Procedimiento Luminarias Da√±adas",
            "contenido": """
PROCEDIMIENTO: REPORTE DE LUMINARIAS DA√ëADAS

TIPOS DE DA√ëOS COMUNES:
- Bombilla fundida o parpadeante
- Poste inclinado o da√±ado
- Cables sueltos o expuestos
- Luminaria apagada en horario nocturno

C√ìMO REPORTAR:
1. Identifique la ubicaci√≥n exacta
2. Tome nota del n√∫mero de poste (si visible)
3. Describa el tipo de da√±o
4. Indique si representa peligro inmediato

CANALES:
- L√≠nea 123 (para emergencias el√©ctricas)
- EPM: 4444115
- App Medell√≠nMe Cuida
- PQRS Secretar√≠a de Infraestructura

TIEMPOS:
- Zonas c√©ntricas: 48 horas
- Zonas perif√©ricas: 96 horas  
- Emergencias el√©ctricas: 12 horas

EMERGENCIAS: Cables ca√≠dos o sueltos requieren atenci√≥n inmediata. Llame al 123 y mant√©ngase alejado del √°rea.
            """,
            "categoria": CategoriaPQRS.ALUMBRADO_PUBLICO,
            "metadatos": {"tipo": "procedimiento", "urgencia": "media"}
        },
        {
            "titulo": "Mantenimiento de Parques y Zonas Verdes",
            "contenido": """
MANTENIMIENTO DE PARQUES - INFORMACI√ìN CIUDADANA

ACTIVIDADES REGULARES:
- Corte de c√©sped cada 15 d√≠as
- Poda de √°rboles seg√∫n cronograma t√©cnico
- Mantenimiento de juegos infantiles
- Limpieza de senderos y mobiliario
- Revisi√≥n de sistemas de riego

QU√â PUEDEN REPORTAR LOS CIUDADANOS:
- Juegos infantiles da√±ados o peligrosos
- Bancas deterioradas
- Problemas de iluminaci√≥n
- Da√±os en senderos
- √Årboles que requieren poda
- Problemas con vegetaci√≥n

PROGRAMA "ADOPTA UN PARQUE":
- Participaci√≥n comunitaria en cuidado
- Capacitaci√≥n en mantenimiento b√°sico
- Suministro de herramientas
- Acompa√±amiento t√©cnico

REPORTES:
- Use App Medell√≠nMe Cuida
- PQRS en l√≠nea o presencial
- L√≠nea 385 5555

La comunidad es clave en el cuidado de los espacios p√∫blicos. Su reporte oportuno ayuda a mantener parques seguros y agradables.
            """,
            "categoria": CategoriaPQRS.ESPACIOS_PUBLICOS,
            "metadatos": {"tipo": "informativo", "programa": "adopta_parque"}
        },
        {
            "titulo": "Prevenci√≥n de Inundaciones - Drenajes",
            "contenido": """
PREVENCI√ìN DE INUNDACIONES - CUIDADO DE DRENAJES

CAUSAS COMUNES DE INUNDACIONES:
- Sumideros tapados por basura
- Obstrucci√≥n de canales y quebradas
- Inadecuado mantenimiento de alcantarillas
- Construcciones que bloquean drenajes naturales

RESPONSABILIDADES CIUDADANAS:
- No arrojar basura a sumideros
- No verter aceites o qu√≠micos al drenaje
- Reportar obstrucciones inmediatamente
- Mantener limpios los frentes de las casas

C√ìMO REPORTAR PROBLEMAS DE DRENAJE:
- Sumideros tapados
- Canales obstruidos
- Inundaciones recurrentes
- Da√±os en infraestructura de drenaje

TEMPORADA DE LLUVIAS:
- Mantenimiento preventivo intensivo
- Limpieza programada de sumideros
- Monitoreo de puntos cr√≠ticos
- Brigadas de emergencia

EMERGENCIAS:
- Inundaciones activas: L√≠nea 123
- Situaciones no urgentes: PQRS

RECUERDE: La prevenci√≥n es responsabilidad de todos. Un sumidero limpio puede evitar inundaciones en su barrio.
            """,
            "categoria": CategoriaPQRS.DRENAJES_ALCANTARILLADO,
            "metadatos": {"tipo": "preventivo", "temporada": "lluvias"}
        },
        {
            "titulo": "Se√±alizaci√≥n Vial - Mantenimiento y Solicitudes",
            "contenido": """
SE√ëALIZACI√ìN VIAL - INFORMACI√ìN PARA CIUDADANOS

TIPOS DE SE√ëALIZACI√ìN:
- Se√±ales verticales (informativas, preventivas, reglamentarias)
- Demarcaci√≥n horizontal (cebras, carriles, flechas)
- Se√±ales de nomenclatura (nombres de calles)
- Sem√°foros y dispositivos electr√≥nicos

PROBLEMAS COMUNES:
- Se√±ales vandalizadas o deterioradas
- Demarcaci√≥n borrada o poco visible
- Se√±ales tapadas por vegetaci√≥n
- Nomenclatura incorrecta o faltante

C√ìMO SOLICITAR NUEVA SE√ëALIZACI√ìN:
1. Identifique la necesidad espec√≠fica
2. Justifique la solicitud (seguridad, flujo vehicular)
3. Proporcione ubicaci√≥n exacta
4. Presente PQRS con esta informaci√≥n

MANTENIMIENTO PROGRAMADO:
- Repintado anual de demarcaci√≥n
- Revisi√≥n trimestral de se√±ales
- Reemplazo seg√∫n vida √∫til
- Actualizaci√≥n por cambios viales

REPORTES URGENTES:
- Se√±ales cr√≠ticas ca√≠das o da√±adas
- Sem√°foros intermitentes o apagados
- Demarcaci√≥n peligrosamente borrada

La se√±alizaci√≥n adecuada es fundamental para la seguridad vial. Su reporte ayuda a mantener las v√≠as seguras para todos.
            """,
            "categoria": CategoriaPQRS.SENALIZACION,
            "metadatos": {"tipo": "informativo", "seguridad": "vial"}
        }
    ]
    
    return sample_docs, specific_docs

async def init_database():
    """Inicializa la base de datos con documentos de ejemplo"""
    
    logger.info("üöÄ Iniciando carga de documentos de ejemplo...")
    
    try:
        # Cargar documentos de archivos
        sample_docs, specific_docs = load_sample_documents()
        
        # Procesar archivos
        for doc_info in sample_docs:
            file_path = doc_info["file"]
            
            if os.path.exists(file_path):
                logger.info(f"üìÑ Cargando {file_path}")
                
                with open(file_path, 'r', encoding='utf-8') as f:
                    contenido = f.read()
                
                documento = DocumentoBase(
                    titulo=doc_info["titulo"],
                    contenido=contenido,
                    categoria=doc_info["categoria"],
                    metadatos=doc_info["metadatos"]
                )
                
                success = vector_store.add_document(documento)
                if success:
                    logger.info(f"‚úÖ Documento '{documento.titulo}' a√±adido exitosamente")
                else:
                    logger.error(f"‚ùå Error a√±adiendo '{documento.titulo}'")
            else:
                logger.warning(f"‚ö†Ô∏è  Archivo no encontrado: {file_path}")
        
        # Procesar documentos espec√≠ficos
        for doc_data in specific_docs:
            logger.info(f"üìù Creando documento: {doc_data['titulo']}")
            
            documento = DocumentoBase(
                titulo=doc_data["titulo"],
                contenido=doc_data["contenido"],
                categoria=doc_data["categoria"],
                metadatos=doc_data["metadatos"]
            )
            
            success = vector_store.add_document(documento)
            if success:
                logger.info(f"‚úÖ Documento '{documento.titulo}' a√±adido exitosamente")
            else:
                logger.error(f"‚ùå Error a√±adiendo '{documento.titulo}'")
        
        # Obtener estad√≠sticas finales
        stats = vector_store.get_collection_stats()
        logger.info(f"üìä Base de datos inicializada:")
        logger.info(f"   - Total documentos: {stats['total_documentos']}")
        logger.info(f"   - Estado: {stats['status']}")
        
        logger.info("üéâ Inicializaci√≥n completada exitosamente!")
        
    except Exception as e:
        logger.error(f"üí• Error durante la inicializaci√≥n: {e}")
        raise

def main():
    """Funci√≥n principal"""
    try:
        # Ejecutar inicializaci√≥n
        asyncio.run(init_database())
        
    except KeyboardInterrupt:
        logger.info("‚èπÔ∏è  Inicializaci√≥n cancelada por el usuario")
    except Exception as e:
        logger.error(f"üí• Error fatal: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()